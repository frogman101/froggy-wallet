<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Froggy BSV Wallet</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-5">

    <div class="max-w-lg mx-auto bg-white p-6 rounded-lg shadow-md">
        <h2 class="text-2xl font-bold text-center">Froggy BSV Wallet</h2>

        <!-- Generate Wallet -->
        <button id="generate-wallet" class="mt-4 bg-blue-500 text-white px-4 py-2 rounded w-full">Generate New Wallet</button>
        <button id="restore-wallet" class="mt-2 bg-gray-500 text-white px-4 py-2 rounded w-full">Restore Wallet</button>

        <!-- Seed Phrase & Private Key -->
        <div id="wallet-info" class="mt-4 hidden">
            <h3 class="text-lg font-semibold">Seed Phrase</h3>
            <p id="mnemonic" class="text-sm font-mono p-2 bg-gray-200 rounded"></p>
            <button onclick="copyText('mnemonic')" class="mt-2 bg-blue-400 text-white px-3 py-1 rounded">Copy</button>

            <h3 class="text-lg font-semibold mt-4">Private Key</h3>
            <p id="private-key" class="text-sm font-mono p-2 bg-gray-200 rounded hidden"></p>
            <button id="view-private-key" class="mt-2 bg-red-500 text-white px-3 py-1 rounded">View Private Key</button>
        </div>

        <!-- Wallet Addresses -->
        <h3 class="mt-6 text-xl">Your Addresses</h3>
        <ul id="address-list" class="mt-2"></ul>
        <button id="generate-address" class="mt-4 bg-green-500 text-white px-4 py-2 rounded w-full hidden">Generate New Address</button>

        <!-- Balance Section -->
        <h3 class="mt-6 text-xl">Balance</h3>
        <p id="balance" class="text-lg font-bold">Loading...</p>

        <!-- Send BSV -->
        <h3 class="mt-6 text-xl">Send BSV</h3>
        <input id="recipient" type="text" placeholder="Recipient Address" class="p-2 border rounded w-full mt-2">
        <input id="amount" type="number" placeholder="Amount in BSV" class="p-2 border rounded w-full mt-2">
        <button id="send-bsv" class="mt-4 bg-green-500 text-white px-4 py-2 rounded w-full">Send</button>

    </div>

    <script>
        function copyText(elementId) {
            const text = document.getElementById(elementId).innerText;
            navigator.clipboard.writeText(text);
            alert("Copied: " + text);
        }

        document.getElementById("generate-wallet").addEventListener("click", async () => {
            const response = await fetch("/generate-wallet", { 
                method: "POST", 
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: "default-user" }) 
            });
            const data = await response.json();
            document.getElementById("mnemonic").innerText = data.mnemonic;
            document.getElementById("wallet-info").classList.remove("hidden");
            document.getElementById("generate-address").classList.remove("hidden");
            alert("Wallet Created!");
        });

        document.getElementById("restore-wallet").addEventListener("click", async () => {
            const mnemonic = prompt("Enter your 12-word seed phrase:");
            const response = await fetch("/restore-wallet", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: "default-user", mnemonic })
            });
            const data = await response.json();
            if (data.restoredAddress) {
                alert("Wallet Restored!");
            } else {
                alert("Invalid Seed Phrase!");
            }
        });

        document.getElementById("generate-address").addEventListener("click", async () => {
            const response = await fetch("/generate-new-address", { 
                method: "POST", 
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: "default-user" }) 
            });
            const data = await response.json();
            document.getElementById("address-list").innerHTML += `<li>${data.newAddress}</li>`;
        });

        document.getElementById("view-private-key").addEventListener("click", async () => {
            const response = await fetch("/view-private-key", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: "default-user", index: 0 }) 
            });
            const data = await response.json();
            document.getElementById("private-key").innerText = data.privateKey;
            document.getElementById("private-key").classList.remove("hidden");
        });

        document.getElementById("send-bsv").addEventListener("click", async () => {
            const recipientAddress = document.getElementById("recipient").value;
            const amount = document.getElementById("amount").value;
            if (!recipientAddress || !amount) {
                alert("Please enter a valid address and amount.");
                return;
            }
            const response = await fetch("/send-bsv", { 
                method: "POST", 
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: "default-user", recipientAddress, amount }) 
            });
            const data = await response.json();
            if (data.success) {
                alert("Transaction Sent! TXID: " + data.txid);
            } else {
                alert("Error: " + data.error);
            }
        });

        async function fetchBalance() {
            const addresses = document.querySelectorAll("#address-list li");
            if (addresses.length === 0) {
                document.getElementById("balance").innerText = "No Address Available";
                return;
            }

            const address = addresses[0].innerText;
            const response = await fetch("/get-balance", { 
                method: "POST", 
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ address }) 
            });

            const data = await response.json();
            document.getElementById("balance").innerText = `${data.balanceInBSV} BSV ($${data.balanceInUSD})`;
        }

        setInterval(fetchBalance, 10000);
    </script>
</body>
</html>
